syntax = "proto3";
package com.kodypay.grpc.pay.v1;
option java_multiple_files = true;
option java_outer_classname = "KodyTerminalTokenProto";
option java_package = "com.kodypay.grpc.pay.v1";
import "google/protobuf/timestamp.proto";
import "com/kodypay/grpc/common/enums.proto";

// All service requests require X-API-Key header with 'API Key' value
service KodyTerminalTokenService {
  rpc CreateCardToken(CreateCardTokenRequest) returns (stream TokenDetailsResponse);
  rpc GetCardToken(GetCardTokenRequest) returns (TokenDetailsResponse);
  rpc PayWithCardToken(PayWithCardTokenRequest) returns (TokenPaymentResponse);
  rpc GetTokenPayment(GetTokenPaymentRequest) returns (TokenPaymentResponse);
}

message CreateCardTokenRequest {
  string store_id = 1; // Your Kody store id
  string terminal_id = 2; // Terminal id where the tokenisation request is sent from, if applicable. Required when obtaining the token through the terminal.
  string idempotency_uuid = 3; // Idempotency key to ensure the request is processed only once, generated by client.
  string token_reference = 4; // Your unique reference for this token request, if applicable. This can be used to match the token with your internal systems.
  string payer_reference = 5; // The payer for whom the token is created, e.g. user id or any unique identifier you use to track users
  optional com.kodypay.grpc.common.RecurringProcessingModel recurring_processing_model = 6; // Recurring processing model
}

message GetCardTokenRequest {
  string store_id = 1; // Your Kody store id
  string token_id = 2; // The unique identifier created by Kody
}

message TokenDetailsResponse {
  string token_id = 1; // The unique identifier created by Kody
  string token_reference = 2; // the external token reference associated with the stored payment method, if applicable
  optional string payment_token = 3; // Unique identifier for the stored payment method as created by Kody, e.g. a token that can be used for future payments
  string payer_reference = 4; // The payer for whom the token is created, e.g. user id or any unique identifier you use to track users
  optional com.kodypay.grpc.common.RecurringProcessingModel recurring_processing_model = 5; // Recurring processing model
  com.kodypay.grpc.common.CardTokenStatus status = 6; // Status of the token
  optional google.protobuf.Timestamp created_at = 7; // Date when the token was created
  optional CardInfo card_info = 8; // Card information

  message CardInfo {
    com.kodypay.grpc.common.PaymentMethods payment_method = 1; // Card brand, e.g. mc, visa and so on
    string payment_method_variant = 2; // Card variant, e.g. mccredit, mcdebit, visadebit, etc.
    string card_last_4_digits = 3; // Last four digits of the card number
    string card_expiry_date = 4; // Expiry date of the card
    string pos_entry_mode = 5; // POS entry mode of the card
  }
}

message PayWithCardTokenRequest {
  string store_id = 1; // Your Kody store id
  string amount = 2;// amount in BigDecimal/2.dp (0.00)
  string currency = 3; // ISO 4217 three letter currency code
  string payment_token = 4;
  string expiry_date = 5; //format: MM/YY
  string idempotency_uuid = 6; // UUID idempotency key provided by client
  optional string payment_reference = 7; // Unique payment reference provided by client
  optional string order_id = 8; // Unique order reference provided by client
  optional string merchant_reference = 9;
  optional string payer_reference = 10;
  map<string, string> metadata = 11;
}

message GetTokenPaymentRequest {
  string store_id = 1;
  oneof payment_identifier {
    string payment_id = 2;
    string payment_reference = 3;
  }
}

message TokenPaymentResponse {
  string payment_id = 1; // The unique identifier created by Kody
  string psp_reference = 2; //we get a psp ref even when there's an adyen failure. Used for receipts
  PaymentStatus payment_status = 3;
  optional string amount = 4;// amount in BigDecimal/2.dp (0.00)
  optional string currency = 5; // ISO 4217 three letter currency code
  optional string payment_reference = 6; // merchant payment reference, if provided
  optional string order_id = 7;
  optional string merchant_reference = 8;
  optional google.protobuf.Timestamp payment_date = 9; // when the payment was made
  optional string original_card_last_four = 10; // from token creation, for receipt
  optional string original_card_brand = 11; // from token creation, for receipt
  optional string original_card_variant = 12;
  optional string auth_code = 13;
  optional string failure_reason = 14;

  enum PaymentStatus {
    PAYMENT_STATUS_UNSPECIFIED = 0;
    NEW = 1;
    PRE_AUTHORISED = 2;
    AUTHORISED = 3;
    CANCELLED = 4;
    ERROR = 5;
    REFUSED = 6;
    PENDING_CAPTURE = 7;
    CANCELLING = 8;
  }
}
